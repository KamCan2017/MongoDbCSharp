//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KnowledgeModel", Namespace="http://schemas.datacontract.org/2004/07/Core")]
    [System.SerializableAttribute()]
    public partial class KnowledgeModel : Common.BasePropertyChanged, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnologyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                this.IsValidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                this.LanguageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Rating {
            get {
                return this.RatingField;
            }
            set {
                this.RatingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Technology {
            get {
                return this.TechnologyField;
            }
            set {
                this.TechnologyField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IKnowledgeService")]
    public interface IKnowledgeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/DeleteById", ReplyAction="http://tempuri.org/IKnowledgeService/DeleteByIdResponse")]
        bool DeleteById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/DeleteById", ReplyAction="http://tempuri.org/IKnowledgeService/DeleteByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/Deleted", ReplyAction="http://tempuri.org/IKnowledgeService/DeletedResponse")]
        bool Deleted(Core.ServiceReference2.KnowledgeModel entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/Deleted", ReplyAction="http://tempuri.org/IKnowledgeService/DeletedResponse")]
        System.Threading.Tasks.Task<bool> DeletedAsync(Core.ServiceReference2.KnowledgeModel entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/FindAll", ReplyAction="http://tempuri.org/IKnowledgeService/FindAllResponse")]
        Core.ServiceReference2.KnowledgeModel[] FindAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/FindAll", ReplyAction="http://tempuri.org/IKnowledgeService/FindAllResponse")]
        System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel[]> FindAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/InsertDocument", ReplyAction="http://tempuri.org/IKnowledgeService/InsertDocumentResponse")]
        MongoDB.Bson.BsonElement[] InsertDocument(MongoDB.Bson.BsonElement[] doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/InsertDocument", ReplyAction="http://tempuri.org/IKnowledgeService/InsertDocumentResponse")]
        System.Threading.Tasks.Task<MongoDB.Bson.BsonElement[]> InsertDocumentAsync(MongoDB.Bson.BsonElement[] doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/Save", ReplyAction="http://tempuri.org/IKnowledgeService/SaveResponse")]
        Core.ServiceReference2.KnowledgeModel Save(Core.ServiceReference2.KnowledgeModel entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/Save", ReplyAction="http://tempuri.org/IKnowledgeService/SaveResponse")]
        System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel> SaveAsync(Core.ServiceReference2.KnowledgeModel entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/Update", ReplyAction="http://tempuri.org/IKnowledgeService/UpdateResponse")]
        Core.ServiceReference2.KnowledgeModel Update(Core.ServiceReference2.KnowledgeModel entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/Update", ReplyAction="http://tempuri.org/IKnowledgeService/UpdateResponse")]
        System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel> UpdateAsync(Core.ServiceReference2.KnowledgeModel entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/UpdateDocument", ReplyAction="http://tempuri.org/IKnowledgeService/UpdateDocumentResponse")]
        bool UpdateDocument(MongoDB.Bson.BsonElement[] doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/UpdateDocument", ReplyAction="http://tempuri.org/IKnowledgeService/UpdateDocumentResponse")]
        System.Threading.Tasks.Task<bool> UpdateDocumentAsync(MongoDB.Bson.BsonElement[] doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/FindById", ReplyAction="http://tempuri.org/IKnowledgeService/FindByIdResponse")]
        Core.ServiceReference2.KnowledgeModel FindById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKnowledgeService/FindById", ReplyAction="http://tempuri.org/IKnowledgeService/FindByIdResponse")]
        System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel> FindByIdAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKnowledgeServiceChannel : Core.ServiceReference2.IKnowledgeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KnowledgeServiceClient : System.ServiceModel.ClientBase<Core.ServiceReference2.IKnowledgeService>, Core.ServiceReference2.IKnowledgeService {
        
        public KnowledgeServiceClient() {
        }
        
        public KnowledgeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KnowledgeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KnowledgeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KnowledgeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool DeleteById(string id) {
            return base.Channel.DeleteById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteByIdAsync(string id) {
            return base.Channel.DeleteByIdAsync(id);
        }
        
        public bool Deleted(Core.ServiceReference2.KnowledgeModel entity) {
            return base.Channel.Deleted(entity);
        }
        
        public System.Threading.Tasks.Task<bool> DeletedAsync(Core.ServiceReference2.KnowledgeModel entity) {
            return base.Channel.DeletedAsync(entity);
        }
        
        public Core.ServiceReference2.KnowledgeModel[] FindAll() {
            return base.Channel.FindAll();
        }
        
        public System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel[]> FindAllAsync() {
            return base.Channel.FindAllAsync();
        }
        
        public MongoDB.Bson.BsonElement[] InsertDocument(MongoDB.Bson.BsonElement[] doc) {
            return base.Channel.InsertDocument(doc);
        }
        
        public System.Threading.Tasks.Task<MongoDB.Bson.BsonElement[]> InsertDocumentAsync(MongoDB.Bson.BsonElement[] doc) {
            return base.Channel.InsertDocumentAsync(doc);
        }
        
        public Core.ServiceReference2.KnowledgeModel Save(Core.ServiceReference2.KnowledgeModel entity) {
            return base.Channel.Save(entity);
        }
        
        public System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel> SaveAsync(Core.ServiceReference2.KnowledgeModel entity) {
            return base.Channel.SaveAsync(entity);
        }
        
        public Core.ServiceReference2.KnowledgeModel Update(Core.ServiceReference2.KnowledgeModel entity) {
            return base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel> UpdateAsync(Core.ServiceReference2.KnowledgeModel entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public bool UpdateDocument(MongoDB.Bson.BsonElement[] doc) {
            return base.Channel.UpdateDocument(doc);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDocumentAsync(MongoDB.Bson.BsonElement[] doc) {
            return base.Channel.UpdateDocumentAsync(doc);
        }
        
        public Core.ServiceReference2.KnowledgeModel FindById(string id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<Core.ServiceReference2.KnowledgeModel> FindByIdAsync(string id) {
            return base.Channel.FindByIdAsync(id);
        }
    }
}
